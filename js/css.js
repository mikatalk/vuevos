(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["css"],{"06c4":function(e,t,n){},"2b10":function(e,t,n){},"9bbb":function(e,t,n){"use strict";n("06c4")},b021:function(e,t,n){"use strict";n.r(t);var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"view view-css"},[n("title-box",[e._v("Make an Egg in HTML/CSS")]),n("section",{staticClass:"square-container"},[n("egg-css")],1),n("section",[n("p",[e._v(" We begin this journey with the basics, HTML and CSS. ")]),n("p",[e._v(" First we create the layout, which is just a pink container with two children, the egg white and the yolk. ")]),n("pre",[e._v("      "),n("code",{domProps:{innerHTML:e._s(e.highlightJS(e.snippetCSS1))}},[e._v("\n      ")]),e._v("\n    ")]),n("p",[e._v(" We have these two rectangles (yolk and white) inside our main egg container (the pink background). It does not quite look like an egg yet. Let's apply some CSS rules to change the shape of each containers. ")]),n("p",[e._v(" We first set the "),n("c",[e._v("width")]),e._v(" and "),n("c",[e._v("height")]),e._v(" of each containers, then we use the "),n("c",[e._v("border-radius: 50%")]),e._v(" property to round the corners and make it more like a circle shape. ")],1),n("p",[e._v(" Finally we set the background colors respectively and add a small border around it to look like a shadow. See the full code below: ")]),n("p",[e._v(" Below is the full CSS code. Be aware that it is not exactly valid CSS syntax. Instead it uses SCSS (Sassy CSS) formatting which enables features such as code nesting, mixins, variables and even built-in utilities such as "),n("c",[e._v("random(n)")]),e._v(" which we use here to make the egg a bit different every time we process the SCSS into CSS using our favorite tools. ")],1),n("pre",[e._v("      "),n("code",{domProps:{innerHTML:e._s(e.highlightJS(e.snippetCSS2))}},[e._v("\n      ")]),e._v("\n    ")]),n("section",{staticClass:"square-container"},[n("egg-css")],1),n("p",[e._v(" Congratulations if you are new to programming and made it this far. Keep in mind this is more of a hack than a common technique but it remains fun to explore. ")]),n("p",[e._v(" Or checkout the next experiment where we look into the "),n("router-link",{staticClass:"link",attrs:{to:"/svg-path"}},[e._v(" SVG path API ")]),e._v(". ")],1),e._m(0)])],1)},s=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("a",{staticClass:"btn",attrs:{href:"https://github.com/mikatalk/vuevos/blob/main/src/eggs/EggCSS.vue"}},[e._v(" Get the code and contribute. ")])])}],a=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},o=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"egg-css"},[n("div",{staticClass:"white"}),n("div",{staticClass:"yolk"})])}],r={name:"EggCSS"},c=r,l=(n("f619"),n("2877")),h=Object(l["a"])(c,a,o,!1,null,null,null),d=h.exports,u='<div class="egg">\n  <div class="white"></div>\n  <div class="yolk"></div>\n</div>\n',g=".egg {\n  position: relative;\n  background: hotpink;\n  width: 100%;\n  height: 100%;\n  .white {\n    position: absolute;\n    background: white;\n    width: 45% + random(20);\n    height: 50% + random(20);\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) rotate(0deg + random(180));\n    border-radius: 50%;\n    border: 2vmin solid darken(white, 4%);\n  }\n  .yolk {\n    position: absolute;\n    background: gold;\n    width: 25%;\n    height: 25%;\n    top: 48% + random(4);\n    left: 48% + random(4);\n    transform: translate(-50%, -50%);\n    border-radius: 50%;\n    border: 2vmin solid darken(gold, 1%);\n  }\n}\n",v=n("5a37"),p=n("72e3"),m=n("1cf6"),b={name:"CSS",data:function(){return{snippetCSS1:u,snippetCSS2:g}},components:{"egg-css":d,"title-box":p["a"],c:m["a"]},methods:{highlightCSS:v["a"],highlightJS:v["b"]}},S=b,w=(n("9bbb"),Object(l["a"])(S,i,s,!1,null,null,null));t["default"]=w.exports},f619:function(e,t,n){"use strict";n("2b10")}}]);
//# sourceMappingURL=css.js.map